@inherits UsersPage
@page "/admin/users"
@attribute [Authorize(Policies.IsAdmin)]
@layout AdminLayout
<h1>@L["Users"]</h1>

@if (users == null)
{
    <LoadingBackground ShowLogoBox="true">
        <label>@L["Loading"]</label>
    </LoadingBackground>

}
else
{

    <MudTable Items="@users" Class="mat-elevation-z5" Striped="true" PageSize="@pageSize" ShowPaging="false">
        <HeaderContent>
            <MudTh><MudButton Icon="person_add" Label=@L["New User"] OnClick="@(e => { createUserDialogOpen = true; })"></MudButton></MudTh>
            <MudTh>@L["UserName"]</MudTh>
            <MudTh>@L["Email"]</MudTh>
            <MudTh>@L["Roles"]</MudTh>
        </HeaderContent>
        <RowTemplate Context="UserRow">
            <MudTd>
                <div style="width:155px;">
                    <MudIconButton Icon="edit" OnClick="@(() => OpenEditDialog(UserRow))"></MudIconButton>
                    <MudIconButton Icon="rotate_right" OnClick="@(() => OpenResetPasswordDialog(UserRow))" Disabled="@(UserRow.UserName == DefaultUserNames.Administrator)"></MudIconButton>
                    <MudIconButton Icon="delete" OnClick="@(() => OpenDeleteDialog(UserRow))" Disabled="@(UserRow.UserName == DefaultUserNames.Administrator)"></MudIconButton>
                </div>
            </MudTd>
            <MudTd><div style="width:130px;">@UserRow.UserName</div></MudTd>
            <MudTd style="white-space: nowrap">
                @UserRow.Email @if (UserRow.EmailConfirmed)
                {<MudIcon Style="vertical-align: text-bottom" Icon="check_circle"></MudIcon>}
            </MudTd>
            <MudTd>
                @if (@UserRow.UserRoles != null)
                    {<MudChipSet>
                        @foreach (var ur in @UserRow.UserRoles)
                            {
                            <MudChip Label="@ur.Role.Name"></MudChip>
                            }
                    </MudChipSet>}
            </MudTd>
        </RowTemplate>
        <PagerContent>
            <MudTablePager PageSizeOptions="new int[]{50, 100}" />
        </PagerContent>
    </MudTable>
    @*<MudPaginator PageSize="@pageSize" Page="@(async a=> await OnPage(a))" Length="@totalItemsCount" Style="background: transparent"></MudPaginator>*@
}
    <MudDialog TitleContent="@L["New User"]" @bind-IsOpen="@createUserDialogOpen">

        <DialogContent>
            <EditForm id="createUserForm" Model="@newUserViewModel" OnValidSubmit="@CreateUserAsync">
                <FluentValidationValidator />
                <ValidationSummary />
                <fieldset>
                    <div class="form-group">
                        <MudTextField @bind-Value="@newUserViewModel.UserName" Label=@L["UserName"] Icon="person" IconTrailing="true" FullWidth="true" Required="true"></MudTextField>
                    </div>
                    <div class="form-group">
                        <MudTextField @bind-Value="@newUserViewModel.Email" Label=@L["Email"] Icon="mail_outline" IconTrailing="true" FullWidth="true" Required="true" Type="mail"></MudTextField>
                    </div>
                    <div class="form-group">
                        <MudTextField @bind-Value="@newUserViewModel.Password" Label=@L["Password"] Icon="lock_outline" IconTrailing="true" FullWidth="true" Required="true" Type="password"></MudTextField>
                    </div>
                    <div class="form-group">
                        <MudTextField @bind-Value="@newUserViewModel.PasswordConfirm" Label=@L["Password Confirmation"] Icon="lock_outline" IconTrailing="true" FullWidth="true" Required="true" Type="password"></MudTextField>
                    </div>
                </fieldset>
            </EditForm>
        </DialogContent>
        <DialogActions>
            <MudButton OnClick="@(e => { createUserDialogOpen = false; })">@L["Cancel"]</MudButton>
            <MudButton Type="submit" form="createUserForm" Disabled="@disableCreateUserButton">@L["Create"]</MudButton>
        </DialogActions>
    </MudDialog>

    <MudDialog @bind-IsOpen="@editDialogOpen" TitleContent="@L["Edit {0}", currentUser.UserName]">
        <DialogContent>
            <EditForm id="updateUserForm" Model="@currentUser" OnValidSubmit="@UpdateUserAsync">
                <FluentValidationValidator />
                <ValidationSummary />
                <fieldset>
                    <div class="form-group">
                        <MudTextField @bind-Value="@currentUser.UserName" Label=@L["UserName"] Icon="person" IconTrailing="true" FullWidth="true" Required="true"></MudTextField>
                    </div>
                    <div class="form-group">
                        <MudTextField @bind-Value="@currentUser.Email" Label=@L["Email"] Icon="mail_outline" IconTrailing="true" FullWidth="true" Required="true" Type="mail"></MudTextField>
                    </div>
                    <MudChipSet>
                        @foreach (var role in roleSelections.OrderBy(x => x.Name))
                        {
                            <MudChip Label="@role.Name" LeadingIcon="@((role.IsSelected) ? "done" : "")" @onclick="@(()=>UpdateUserRole(role))" />
                        }
                    </MudChipSet>
                </fieldset>
            </EditForm>
        </DialogContent>
        <DialogActions>
            <MudButton OnClick="@CancelChanges">@L["Cancel"]</MudButton>
            <MudButton Type="submit" form="updateUserForm" Disabled="@disableUpdateUserButton">@L["Update"]</MudButton>
        </DialogActions>
    </MudDialog>

    <MudDialog TitleContent="@L["Confirm Delete"]" @bind-IsOpen="@deleteUserDialogOpen" Style="z-index:100">

        <DialogContent>
            @L["Are you sure you want to delete {0}?", currentUser.UserName]
        </DialogContent>
        <DialogActions>
            <MudButton OnClick="@(e => { deleteUserDialogOpen = false; })">@L["Cancel"]</MudButton>
            <MudButton OnClick="@DeleteUserAsync">@L["Delete"]</MudButton>
        </DialogActions>
    </MudDialog>

    <MudDialog @bind-IsOpen="@changePasswordDialogOpen" TitleContent="@L["Change password for {0}", currentUser.UserName]">
        <DialogContent>
            <EditForm id="changePasswordForm" Model="@changePasswordViewModel" OnValidSubmit="@ResetUserPasswordAsync">
                <FluentValidationValidator />
                <ValidationSummary />
                <fieldset>
                    <div class="form-group">
                        <MudTextField @bind-Value="@changePasswordViewModel.Password" Label=@L["Password"] Icon="lock_outline" IconTrailing="true" FullWidth="true" Required="true" Type="password"></MudTextField>
                    </div>
                    <div class="form-group">
                        <MudTextField @bind-Value="@changePasswordViewModel.PasswordConfirm" Label=@L["Password Confirmation"] Icon="lock_outline" IconTrailing="true" FullWidth="true" Required="true" Type="password"></MudTextField>
                    </div>
                </fieldset>
            </EditForm>
        </DialogContent>
        <DialogActions>
            <MudButton OnClick="@(e => { changePasswordDialogOpen = false; })">@L["Cancel"]</MudButton>
            <MudButton Type="submit" form="changePasswordForm" Disabled="@disableChangePasswordButton">@L["Reset Password"]</MudButton>
        </DialogActions>
    </MudDialog>

    @code {

    }
