@inherits LayoutComponentBase
@inject NavigationManager navigationManager
@inject AppState appState
@inject IStringLocalizer<Global> L
@attribute [Authorize(Policies.IsAdmin)]

<MudThemeProvider Theme="_currentTheme" />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Elevation="4">
        <MudHidden Breakpoint="Breakpoint.SmAndDown">
            <MudIcon Icon="@Icons.Material.Filled.Pets" Size="Size.Large" />
            <LoginDisplay />
        </MudHidden>
        <MudHidden Breakpoint="Breakpoint.MdAndUp">
            <MudIconButton Icon="@Icons.Material.Outlined.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        </MudHidden>
        <MudHidden Breakpoint="Breakpoint.Xs">
            <MudText Typo="Typo.h6" Class="ml-4">Admin Dashboard</MudText>
        </MudHidden>
        <MudHidden Breakpoint="Breakpoint.Xs" Invert="true">
            <MudText Typo="Typo.subtitle2">Admin Dashboard</MudText>
        </MudHidden>
        <MudAppBarSpacer />

        @*  <!-- Old sample Cuture Selection -->
            <MudMenu Icon="@Icons.Material.Outlined.Alarm" Color="Color.Inherit" Direction="Direction.Bottom" OffsetY="true" Dense="true">
                <MudMenuItem>English</MudMenuItem>
                <MudMenuItem>Swedish</MudMenuItem>
                <MudMenuItem>Old Norse</MudMenuItem>
            </MudMenu>
        *@
        
        <!-- Select Cutlture Dropdown -->
        <SelectCulture></SelectCulture>
        
        <!-- Drop Down Menu -->
        <MudMenu Icon="@Icons.Material.Outlined.Widgets" Color="Color.Inherit" Direction="Direction.Bottom" OffsetY="true" Dense="true">
            <MudMenuItem Link="https://slicksysdev.com/">SSDC</MudMenuItem>
            <MudMenuItem Link="https://christopherlane.net">Engineer</MudMenuItem>
        </MudMenu>
        
        <!-- Drop Down Menu -->
        <MudMenu Direction="Direction.Left" OffsetX="true" Dense="true" Class="mt-1 ml-4">
            <ActivatorContent>
                <MudAvatar Image="images/ssdc.png" />
            </ActivatorContent>
            <ChildContent>
                <PersonCard Class="mt-n2" />
                <MudDivider Class="mb-2" />
                <MudListItem Text="Account" Icon="@Icons.Material.Outlined.Person" Href="/account/account" />
                <MudListItem Text="Logout" Icon="@Icons.Material.Outlined.Login" Href="/account/login" />
            </ChildContent>
        </MudMenu>
    </MudAppBar>
    
    <!-- Left Sidebar Menu -->
    <MudDrawer @bind-Open="_drawerOpen" Elevation="25" ClipMode="_themeManager.DrawerClipMode">
        <AdminNavMenu />
    </MudDrawer>
    
    <!-- Main Body -->
    <MudMainContent>
        <MudHidden Breakpoint="Breakpoint.SmAndDown">
            <MudToolBar DisableGutters="true">
                
                <!-- Left Sidebar Open/Close Button -->
                <MudIconButton Icon="@Icons.Material.Outlined.Menu" Color="Color.Inherit" OnClick="@((e) => DrawerToggle())" Class="ml-3" />
              
                <!-- Breadcrumbs at top of main Body -->
                <MudBreadcrumbs Items="_items"></MudBreadcrumbs>
                <MudToolBarSpacer />
                
                <!-- A couple of links buttons -->
                <MudButton Variant="Variant.Text" Link="https://slicksysdev.com/" Style="color:#594AE2;">SSDC</MudButton>
                <MudButton Variant="Variant.Text" Link="https://slicksysdev.com/" Style="color:#424242;" Class="mr-3">Line Of Business Software</MudButton>

            </MudToolBar>
        </MudHidden>
        
        <!-- Page Body -->
        <MudContainer MaxWidth="MaxWidth.False" Class="mt-4">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>


@code {

    [CascadingParameter]
    Task<AuthenticationState> authenticationStateTask { get; set; }

    private ThemeManagerTheme _themeManager = new ThemeManagerTheme();
    private MudTheme _currentTheme = new SSDCAdminDashboard();
    bool _navMenuOpened = true;
    bool _navMinified = false;
    bool _drawerOpen = true;
    bool _themeManagerOpen = false;

    public string bbDrawerClass = "";


    protected override async Task OnInitializedAsync()
    {
        var user = (await authenticationStateTask).User;
        if (user.Identity.IsAuthenticated)
        {
            var profile = await appState.GetUserProfile();
            if (profile == null)
                profile = new SSDCPortal.Shared.Dto.Db.UserProfile();

            //_navMenuOpened = profile.IsNavOpen;
            //_navMinified = profile.IsNavMinified;
            _drawerOpen = profile.IsNavOpen; 

            _themeManager.Theme = new SSDCAdminDashboard();
            _themeManager.DrawerClipMode = DrawerClipMode.Always;
            _themeManager.FontFamily = "Montserrat";
            _themeManager.DefaultBorderRadius = 6;
            _themeManager.AppBarElevation = 4;
            _themeManager.DrawerElevation = 25;
            StateHasChanged();
        }
    }

    // Begin Mud Stuff (Remove as necessary
    //--------------------------------------------------------------------------------
    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    void OpenThemeManager(bool value)
    {
        _themeManagerOpen = value;
    }

    void UpdateTheme(ThemeManagerTheme value)
    {
        _themeManager = value;
        StateHasChanged();
    }

    private List<BreadcrumbItem> _items = new List<BreadcrumbItem>
    {
        new BreadcrumbItem("Personal", href: "#"),
        new BreadcrumbItem("Dashboard", href: "#"),
    };

    //--------------------------------------------------------------------------------
    void NavToggle()
    {
        _navMenuOpened = !_navMenuOpened;
        if (_navMenuOpened)
        {
            bbDrawerClass = "full";
        }
        else
        {
            bbDrawerClass = "closed";
        }

        this.StateHasChanged();
    }

    void NavLock()
    {
        //Todo Lock Nav
    }

    void NavMinify()
    {
        _navMinified = !_navMinified;

        if (!_navMenuOpened)
        {
            _navMinified = true;
        }

        if (_navMinified)
        {
            bbDrawerClass = "mini";
            _navMenuOpened = true;
        }
        else if (_navMenuOpened)
        {
            bbDrawerClass = "full";
        }

        _navMenuOpened = true;
        this.StateHasChanged();
    }


    private void CallLogin()
    {
        var returnUrl = navigationManager.ToBaseRelativePath(navigationManager.Uri);
        navigationManager.NavigateTo($"{SSDCPortal.Constants.Settings.LoginPath}/{returnUrl}", forceLoad: false);
    }

}