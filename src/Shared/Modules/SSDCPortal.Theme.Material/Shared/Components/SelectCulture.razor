@inject NavigationManager navigationManager

<MudItem Class="mt-n3" xs="12" sm="4" md="2">
    <MudSelect Placeholder=@CurrentCulture  
               @bind-Value="@cultureValue" HelperText="CultureInfo" ToStringFunc="@convertFunc" OffsetY="true"
               OpenIcon="@Icons.Material.Filled.LocalDrink"
               CloseIcon="@Icons.Material.Filled.Flag" AdornmentColor="Color.Secondary">
        @foreach (var culture in @SSDCPortal.Shared.Localizer.Settings.SupportedCulturesWithName)
        {
            <MudSelectItem Value="@(CultureInfo.GetCultureInfo(culture.Item2))" />
        }
    </MudSelect>
</MudItem>

@code {
    private string CurrentCulture { get; set; }

    protected override async Task OnInitializedAsync()
    {
        CurrentCulture = CultureInfo.CurrentCulture.DisplayName;

        await base.OnInitializedAsync();
    }
    private CultureInfo cultureValue { get; set; }
    private Func<CultureInfo, string> convertFunc = ci => ci?.DisplayName;

    //TODO: Fix the Culture Selection
    public void OnCultureChanged(string culture)
    {
        var uri = new Uri(navigationManager.Uri).GetComponents(UriComponents.PathAndQuery, UriFormat.Unescaped);
        navigationManager.NavigateTo($"/Culture/SetCulture?culture={Uri.EscapeDataString(culture)}&redirectUri={Uri.EscapeDataString(uri)}", forceLoad: true);
    }
}
