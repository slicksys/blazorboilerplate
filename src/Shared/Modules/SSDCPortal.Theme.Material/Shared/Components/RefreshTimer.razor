@implements IDisposable
@using System.Timers

<div class="refresh-timer row">

    <div>@Label</div>
    <div>
        <MudSwitch @bind-Checked="@timer.Enabled" Color="Color.Primary" Class="ml-n1 my-3"></MudSwitch>
    </div>
    <div class="refresh-timer-interval-wrapper">
        <MudNumericField Label="@Text"
                         @bind-Value="@Interval"
                         Format="F1" 
                         TextChanged="UpdateInterval">
        </MudNumericField>
    </div>
</div>
@code {

    private Timer timer = new Timer();


    /// <summary>
    /// Delegate invoked on timer interval
    /// </summary>
    [Parameter] public ElapsedEventHandler ElapsedEvent { get; set; }

    /// <summary>
    /// Text Placed to the left of the interval selection dropdown.
    /// Defaults to 'Refresh Interval: .
    /// </summary>
    [Parameter]
    public string Label { get; set; } = "Refresh Interval: ";
    [Parameter] public string Text { get; set; } = "Seconds";

    /// <summary>
    /// Timer Interval Value in Seconds. Defaults to 5
    /// </summary>
    [Parameter] public double Interval { get; set; } = 5;
    protected override void OnInitialized()
    {

        timer.Enabled = false;
        timer.Interval = Interval * 1000;
        timer.Elapsed += ElapsedEvent;
        base.OnInitialized();

    }
    void UpdateInterval(string newInterval)
    {
        double.TryParse(newInterval, out double newInter);
        Interval = newInter;
        timer.Interval = Interval * 1000; //convert to milliseconds
    }
    public void Dispose()
    {
        timer.Elapsed -= ElapsedEvent;
        timer.Dispose();
    }
}
