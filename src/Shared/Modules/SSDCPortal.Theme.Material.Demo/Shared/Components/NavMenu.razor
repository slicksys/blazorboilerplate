@using Microsoft.AspNetCore.Components;
@inject NavigationManager navigationManager
@inject IStringLocalizer<Global> L
@implements IDynamicComponent

@*<!--
        This is the menu that get s servedup when the user is not yet loggedin.
        The Main Admin menu is located at ..\Shared\Modules\SSDCPortal.Theme.Material\Shared\Components\NavMenu.razor.
-->*@

<PersonCard Style="background-color: var(--mud-palette-drawer-background);color: var(--mud-palette-drawer-text);" />
<MudDivider Class="mb-4" />
<MudNavMenu>
    
    <MudNavLink Href="/dashboard" Match="NavLinkMatch.All" Icon="@Icons.Material.Outlined.Dashboard">Dashboard</MudNavLink>
    <MudNavLink Href="/account/myaccount" Icon="@Icons.Material.Outlined.Person">Account</MudNavLink>
    <MudNavLink Href="/drag_and_drop" Icon="@Icons.Material.Outlined.Timer">Drag and Drop</MudNavLink>

    <MudNavLink Href="scheduler" Icon="@Icons.Material.Outlined.CalendarViewDay">Schedule</MudNavLink>
    <MudNavLink Href="kennelscheduler" Icon="@Icons.Material.Outlined.AssignmentInd">Kennel Scheduler</MudNavLink>

    <MudNavLink Href="email" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Outlined.Email">Email</MudNavLink>
    <MudNavLink Href="chat" Icon="@Icons.Material.Outlined.Forum">Chat</MudNavLink>
    <MudNavLink Href="todo_list" Icon="@Icons.Custom.Uncategorized.AlertSuccess" Disabled="false">Todo</MudNavLink>
    


    <MudText Typo="Typo.subtitle2" Color="Color.Error" Class="ml-4 my-3">Authentication / Permissions</MudText>
    
    <MudNavLink Href="account/login" Icon="@Icons.Material.Outlined.InsertDriveFile">Login</MudNavLink>
    <MudNavLink Href="account/register" Icon="@Icons.Material.Outlined.InsertDriveFile">Register</MudNavLink>
    <MudNavLink Href="account/forgot-password" Icon="@Icons.Material.Outlined.InsertDriveFile">Forgot Password</MudNavLink>
    <MudNavLink Href="account/reset-password" Icon="@Icons.Material.Outlined.InsertDriveFile">Reset Password</MudNavLink>
    


</MudNavMenu>

@code {

    public int Order { get => 1; }
    public string IntoComponent { get => "NavMenu"; }

    public bool IsLoggedIn = false;

    [CascadingParameter]
    Task<AuthenticationState> authenticationStateTask { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        IsLoggedIn = false;
        var user = (await authenticationStateTask).User;

        if (user.Identity.IsAuthenticated)
        {
            IsLoggedIn = true;
        }

        if (user.IsInRole(DefaultRoleNames.Administrator))
        {
            // Perform some action only available to users in the 'admin' role
            //Console.WriteLine(DefaultRoleNames.Administrator);
        }
    }
}
